import org.gradle.internal.os.OperatingSystem

plugins {
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    mavenCentral()
}

def os = OperatingSystem.current()
def osArch = System.getProperty("os.arch")
def arm64 = osArch.startsWith("aarch64") || osArch.startsWith("armv8")
def arm32 = osArch.startsWith("arm") && !arm64
def x64 = osArch.contains("64") && !arm32 && !arm64
def x86 = !x64 && !arm32 && !arm64

def lwjglArch = arm64? "-arm64" :arm32? "-arm32" :x64? "" :x86? "-x86" : ""
def lwjglOS = os.linux? "linux" :os.macOsX? "macos" :os.windows? "windows" : os.name
def lwjglNatives = lwjglOS + lwjglArch

def jfxArch = arm64? "-aarch64" :arm32? "-arm32" :x64? "" :x86? "-x86" : ""
def jfxOS = os.linux? "linux" :os.macOsX? "mac" :os.windows? "win" : os.name
def jfxNatives = jfxOS + jfxArch

sourceSets{
    examples {
        resources { srcDirs "src/examples/resources" }
        java {
            srcDirs 'src/examples/kotlin'
            compileClasspath += sourceSets.main.runtimeClasspath + sourceSets.main.compileClasspath
            runtimeClasspath += sourceSets.main.runtimeClasspath + sourceSets.main.compileClasspath
        }
    }
}

dependencies {
    implementation project(':core')
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "org.openjfx:javafx-base:$jfxVersion:$jfxNatives"
    implementation "org.openjfx:javafx-controls:$jfxVersion:$jfxNatives"
    implementation "org.openjfx:javafx-graphics:$jfxVersion:$jfxNatives"

    implementation platform("org.lwjgl:lwjgl-bom:3.3.0")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"

    implementation "org.lwjgl:lwjgl::natives-$lwjglNatives"
    implementation "org.lwjgl:lwjgl-glfw::natives-$lwjglNatives"
    implementation "org.lwjgl:lwjgl-opengl::natives-$lwjglNatives"

    compileOnly files('../libs/javafx.graphics.win-es2.jar')
}